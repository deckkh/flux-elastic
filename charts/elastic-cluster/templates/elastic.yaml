# trying yaml anchors


apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}  
spec:
  version: {{ .Values.elastic.version }}

  secureSettings:
  - secretName: mysecret

  nodeSets:

{{ if gt ( .Values.master.nodeset.count |toString|atoi) 0 }}
  - name: master
    count: {{ .Values.master.nodeset.count}}
    config:
      node.roles: ['master']
      node.store.allow_mmap: false
    podTemplate:
      spec:
        nodeSelector:
          org.myorg.node-type/compute: "true"

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        securityContext: &ya_securityContext
          runAsUser: 1000
          fsGroup: 1000
          runAsNonRoot: true

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone

{{ end }}

{{ if gt ( .Values.data.nodeset.count |toString|atoi) 0 }}
  - name: data
    count: {{ .Values.data.nodeset.count}}
    config:
      node.roles: ['data']
      node.store.allow_mmap: false      
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        securityContext: *ya_securityContext
{{ end }}      



{{ if gt ( .Values.datahot.nodeset.count |toString|atoi) 0 }}
  - name: datahot
    count: {{ .Values.datahot.nodeset.count}}
    config:
      node.roles: ['data_hot','data_content']
      node.store.allow_mmap: false            
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        securityContext: *ya_securityContext
{{ end }}      

{{ if gt ( .Values.ingest.nodeset.count |toString|atoi) 0 }}
  - name: ingest
    count: {{ .Values.ingest.nodeset.count}}
    config:
      node.roles: ['ingest']
      node.store.allow_mmap: false            
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        nodeSelector:
          org.myorg.node-type/compute: "true"   

        securityContext: *ya_securityContext

{{ end }}      