# trying yaml anchors


apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}  
spec:
  version: {{ .Values.elastic.version }}

  secureSettings:
  - secretName: mysecret

  nodeSets:

{{ if gt ( .Values.master.nodeset.count |toString|atoi) 0 }}
  - name: master
    count: {{ .Values.master.nodeset.count}}
    config:
      node.roles: ['master']
      node.store.allow_mmap: false
      xpack.security.authc.realms.native.native1:
        order: 0

      xpack.security.authc.realms.oidc.myrealm:
        order: 1
        rp.client_id: "the_client_id"
        rp.response_type: code
        rp.redirect_uri: "https://kibana.example.org:5601/api/security/oidc/callback"
        op.issuer: "https://op.example.org"
        op.authorization_endpoint: "https://op.example.org/oauth2/v1/authorize"
        op.token_endpoint: "https://op.example.org/oauth2/v1/token"
        op.jwkset_path: "https://login.microsoftonline.com/3232323-5566-3333-123456789012/discovery/v2.0/keys" 
        op.userinfo_endpoint: "https://op.example.org/oauth2/v1/userinfo"
        op.endsession_endpoint: "https://op.example.org/oauth2/v1/logout"
        rp.post_logout_redirect_uri: "https://kibana.example.org:5601/security/logged_out"
        claims.principal: sub
        claims.groups: "http://example.info/claims/groups"

    podTemplate:
      spec:
        nodeSelector:
          org.myorg.node-type/compute: "true"

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        securityContext: &ya_securityContext
          runAsUser: 1000
          fsGroup: 1000
          runAsNonRoot: true

        initContainers:
        - name: elastic-internal-init-keystore
          env:
          - name: ZONE
            value: dummyzone

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone

{{ end }}

{{ if gt ( .Values.data.nodeset.count |toString|atoi) 0 }}
  - name: data
    count: {{ .Values.data.nodeset.count}}
    config:
      node.roles: ['data']
      node.store.allow_mmap: false      
      xpack.security.authc.realms.native.native1:
        order: 0

      xpack.security.authc.realms.oidc.myrealm:
        order: 1
        rp.client_id: "the_client_id"
        rp.response_type: code
        rp.redirect_uri: "https://kibana.example.org:5601/api/security/oidc/callback"
        op.issuer: "https://op.example.org"
        op.authorization_endpoint: "https://op.example.org/oauth2/v1/authorize"
        op.token_endpoint: "https://op.example.org/oauth2/v1/token"
        op.jwkset_path: "https://login.microsoftonline.com/3232323-5566-3333-123456789012/discovery/v2.0/keys" 
        op.userinfo_endpoint: "https://op.example.org/oauth2/v1/userinfo"
        op.endsession_endpoint: "https://op.example.org/oauth2/v1/logout"
        rp.post_logout_redirect_uri: "https://kibana.example.org:5601/security/logged_out"
        claims.principal: sub
        claims.groups: "http://example.info/claims/groups"
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        initContainers:
        - name: elastic-internal-init-keystore
          env:
          - name: ZONE
            value: dummyzone

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone

        securityContext: *ya_securityContext
{{ end }}      



{{ if gt ( .Values.datahot.nodeset.count |toString|atoi) 0 }}
  - name: datahot
    count: {{ .Values.datahot.nodeset.count}}
    config:
      node.roles: ['data_hot','data_content']
      node.store.allow_mmap: false            
      xpack.security.authc.realms.native.native1:
        order: 0

      xpack.security.authc.realms.oidc.myrealm:
        order: 1
        rp.client_id: "the_client_id"
        rp.response_type: code
        rp.redirect_uri: "https://kibana.example.org:5601/api/security/oidc/callback"
        op.issuer: "https://op.example.org"
        op.jwkset_path: "https://login.microsoftonline.com/3232323-5566-3333-123456789012/discovery/v2.0/keys" 
        op.authorization_endpoint: "https://op.example.org/oauth2/v1/authorize"
        op.token_endpoint: "https://op.example.org/oauth2/v1/token"
        op.userinfo_endpoint: "https://op.example.org/oauth2/v1/userinfo"
        op.endsession_endpoint: "https://op.example.org/oauth2/v1/logout"
        rp.post_logout_redirect_uri: "https://kibana.example.org:5601/security/logged_out"
        claims.principal: sub
        claims.groups: "http://example.info/claims/groups"
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        initContainers:
        - name: elastic-internal-init-keystore
          env:
          - name: ZONE
            value: dummyzone

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone


        securityContext: *ya_securityContext
{{ end }}      

{{ if gt ( .Values.ingest.nodeset.count |toString|atoi) 0 }}
  - name: ingest
    count: {{ .Values.ingest.nodeset.count}}
    config:
      node.roles: ['ingest']
      node.store.allow_mmap: false            
      xpack.security.authc.realms.native.native1:
        order: 0

      xpack.security.authc.realms.oidc.myrealm:
        order: 1
        rp.client_id: "the_client_id"
        rp.response_type: code
        rp.redirect_uri: "https://kibana.example.org:5601/api/security/oidc/callback"
        op.issuer: "https://op.example.org"
        op.authorization_endpoint: "https://op.example.org/oauth2/v1/authorize"
        op.token_endpoint: "https://op.example.org/oauth2/v1/token"
        op.jwkset_path: "https://login.microsoftonline.com/3232323-5566-3333-123456789012/discovery/v2.0/keys" 
        op.userinfo_endpoint: "https://op.example.org/oauth2/v1/userinfo"
        op.endsession_endpoint: "https://op.example.org/oauth2/v1/logout"
        rp.post_logout_redirect_uri: "https://kibana.example.org:5601/security/logged_out"
        claims.principal: sub
        claims.groups: "http://example.info/claims/groups"
    podTemplate:
      spec:

        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          

        initContainers:
        - name: elastic-internal-init-keystore
          env:
          - name: ZONE
            value: dummyzone

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone


        nodeSelector:
          org.myorg.node-type/compute: "true"   

        securityContext: *ya_securityContext

{{ end }}      