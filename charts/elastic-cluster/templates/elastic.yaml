{{- define "elastic.zoneawareness"}}
      cluster.routing.allocation.awareness.attributes: zone
      node.attr.zone: ${ZONE}
{{- end }}

{{- define "elastic.containers"}}
        initContainers:
        - name: elastic-internal-init-keystore
          env:
          - name: ZONE
            value: dummyzone

        containers:
        - name: elasticsearch
          env:
          - name: ZONE
            value: dummyzone
{{- end}}


{{- define "elastic.volumeclaim"}}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .storage}}
        storageClassName: {{ .storageclass}}
{{- end}}

{{- define "elastic.oidc" }}
      xpack.security.authc.realms.native.native1:
        order: 0
      xpack.security.authc.realms.oidc.myrealm:
        order: 1
        rp.client_id: "the_client_id"
        rp.response_type: code
        rp.redirect_uri: "https://kibana.example.org:5601/api/security/oidc/callback"
        op.issuer: "https://op.example.org"
        op.authorization_endpoint: "https://op.example.org/oauth2/v1/authorize"
        op.token_endpoint: "https://op.example.org/oauth2/v1/token"
        op.jwkset_path: "https://login.microsoftonline.com/3232323-5566-3333-123456789012/discovery/v2.0/keys" 
        op.userinfo_endpoint: "https://op.example.org/oauth2/v1/userinfo"
        op.endsession_endpoint: "https://op.example.org/oauth2/v1/logout"
        rp.post_logout_redirect_uri: "https://kibana.example.org:5601/security/logged_out"
        claims.principal: sub
        claims.groups: "{{ .Values.oidc.claimurl }}"
{{- end }}

{{- define "elastic.securitycontext" }}
        securityContext: 
          runAsUser: 1000
          fsGroup: 1000
          runAsNonRoot: true
{{- end }}

{{- define "elastic.tolerations" }}
        tolerations:
          - key: myapp
            operator: Equal
            value: worker
            effect: NoSchedule          
{{- end }}


{{- define "elastic.nodeset" }}
{{- $root := index . 0 -}}
{{- $local := index . 1 -}}
{{ if gt ( $local.count |toString|atoi) 0 }}

  - name: {{ $local.name}}
    count: {{ $local.count}}
    config:
      node.roles: {{ $local.roles}}
{{- template "elastic.zoneawareness" $local }}
      node.store.allow_mmap: false
{{- template "elastic.oidc" $root }}

    podTemplate:
      spec:
        nodeSelector:
          org.myorg.node-type/compute: "true" 


{{- template "elastic.tolerations" $local }}
{{- template "elastic.securitycontext" $local }}
{{- template "elastic.containers" $local }}
{{- template "elastic.volumeclaim" $local }}

{{ end }}



{{- end }}

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}  
spec:
  version: {{ .Values.elastic.version }}
#  image: deckkh/elasticsearch:8.1.3

  secureSettings:
  - secretName: mysecret

  nodeSets:

{{- template "elastic.nodeset" (list .  .Values.master.nodeset)}}
{{- template "elastic.nodeset" (list .  .Values.data.nodeset)}}
{{- template "elastic.nodeset" (list .  .Values.datahot.nodeset)}}
{{- template "elastic.nodeset" (list .  .Values.ingest.nodeset)}}